<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.talend.master</groupId>
		<artifactId>master.Codes</artifactId>
		<version>6.0.0</version>
		<relativePath>./pom.xml</relativePath>
	</parent>
	<groupId>org.talend.job</groupId>
	<artifactId>Job</artifactId>
	<version>0.1</version>

	<properties>
		<talend.job.path>@JobPath@</talend.job.path>
		<talend.job.package>@JobPackage@</talend.job.package>

		<!-- for jobInfo.properties -->
		<talend.project.name>@ProjectName@</talend.project.name>
		<talend.project.id>@ProjectId@</talend.project.id>
		<talend.project.branch>@ProjectBranch@</talend.project.branch>
		<talend.job.name>${project.artifactId}</talend.job.name> <!-- @JobName@ -->
		<talend.job.version>${project.version}</talend.job.version> <!-- @JobVersion@ -->
		<talend.job.date>@JobDate@</talend.job.date>
		<talend.job.context>@JobContext@</talend.job.context>
		<talend.job.id>@JobId@</talend.job.id>
		<talend.job.class>${talend.job.package}.${talend.job.name}</talend.job.class> <!-- @JobClass@ -->
		<talend.job.stat>@JobStat@</talend.job.stat>
		<talend.job.applyContextToChildren>@JobApplyContextToChildren@</talend.job.applyContextToChildren>
		<talend.product.version>@ProductVersion@</talend.product.version>

		<!-- for bat/sh -->
		<talend.job.bat.classpath>@JobBatClasspath@</talend.job.bat.classpath>
		<talend.job.sh.classpath>@JobShClasspath@</talend.job.sh.classpath>
		<talend.job.script.addition>""</talend.job.script.addition> <!-- empty by default -->
	</properties>

	<dependencies>
		<!-- Add some dependencies jars -->
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<executions>
					<execution>
						<id>default-clean</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<includes>
						<!-- only compile the job source -->
						<include>${talend.job.path}/**.java</include>
					</includes>
                    <testExcludes>
                        <!-- exclude every test -->
                        <exclude>**</exclude>
                    </testExcludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-running-resources</id>
						<phase>compile</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration> <!-- copy the contexts for running job -->
							<outputDirectory>${project.build.outputDirectory}/${talend.job.path}</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/src/main/resources/${talend.job.path}</directory>
									<includes>
										<include>contexts/*.properties</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<id>default-jar</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<includes>
								<!-- only package the job classes -->
								<include>${talend.job.path}/*.class</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>prepare-scripts</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target name="${talend.job.name}_test">
								<!-- Copy and rename the sh/bat to target folder -->
								<condition property="isSet">
									<isset property="running.scripts.dir" />
								</condition>
								<antcall target="copyScripts"></antcall>
							</target>
							<target name="${talend.job.name}_copyScripts" if="isSet">
								<mkdir dir="${running.scripts.dir}" />
								<copy todir="${running.scripts.dir}">
									<fileset dir="${basedir}/src/main/templates/" />
									<globmapper from="Job_run_template.*" to="${talend.job.name}_run.*" />
								</copy>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>${basedir}/src/main/assemblies/assembly_${talend.job.name}.xml</descriptor>
							</descriptors>
							<tarLongFileMode>gnu</tarLongFileMode>
							<appendAssemblyId>false</appendAssemblyId>
							<!-- <finalName>${project.artifactId}-${project.version}</finalName> -->
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>default-settings</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- by default, all excluded, fixing that when "include-libs" profile 
					is not active, export the libraries always. -->
				<talend.libraries.excludes.set>*:*</talend.libraries.excludes.set>
				<talend.jobs.excludes.set>*:*</talend.jobs.excludes.set>
			</properties>
		</profile>
		<profile>
			<id>include-java-sources</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<sourcecodes.dir>${project.build.sourceDirectory}</sourcecodes.dir>
				<resources.dir>${basedir}/src/main/resources/</resources.dir>
			</properties>
		</profile>
		<profile>
			<id>include-maven-resources</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<templates.dir>${basedir}/src/main/templates/</templates.dir>
				<assemblies.dir>${basedir}/src/main/assemblies/</assemblies.dir>
				<poms.dir>${basedir}</poms.dir>
			</properties>
		</profile>
		<profile>
			<id>include-items</id>
			<properties>
				<items.dir>${basedir}/src/main/items/</items.dir>
			</properties>
		</profile>
		<profile>
			<id>include-libs</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<talend.libraries.includes.set>org.talend.libraries:*</talend.libraries.includes.set>
				<talend.libraries.excludes.set>${talend.libraries.includes.set}</talend.libraries.excludes.set>
				<talend.jobs.excludes.set>${project.groupId}:*</talend.jobs.excludes.set>
			</properties>
		</profile>
		<profile>
			<id>include-binaries</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<!-- this is temp folder for scripts, it must be same the settings of 
					antrun plugin. -->
				<running.scripts.dir>${project.build.directory}/RunScripts/${talend.job.name}</running.scripts.dir>
				<jobs.binaries.includes.set>${project.groupId}:*</jobs.binaries.includes.set>
				<routines.binaries.includes.set>org.talend.code:routines</routines.binaries.includes.set>
			</properties>
		</profile>
		<profile>
			<id>include-contexts</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<contexts.running.dir>${basedir}/src/main/resources/</contexts.running.dir>
			</properties>
		</profile>
		<profile>
			<id>include-test-sources</id>
			<properties>
				<test.sourcecodes.dir>${project.build.testDirectory}</test.sourcecodes.dir>
				<test.resources.dir>${basedir}/src/test/resources/</test.resources.dir>
			</properties>
		</profile>
		<profile>
			<id>include-test-reports</id>
			<properties>
				<reports.dir>${basedir}/target/surefire-reports</reports.dir>
			</properties>
		</profile>
	</profiles>
</project>
